// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    repositories {
        google()// Google's Maven repository
        mavenCentral()
        gradlePluginPortal()
        maven {
            url 'https://developer.huawei.com/repo/' }

    }
    dependencies {
        classpath Libs.com_android_tools_build_gradle
        classpath Libs.google_services// Google Services plugin
        //classpath "com.github.dcendents:android-maven-gradle-plugin:$mavenPluginVersion"
        classpath Libs.agcp// Huawei Push Plugin
        classpath Libs.kotlin_gradle_plugin
        classpath Libs.sonarqube_gradle_plugin
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.8.1'
        classpath("io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.20.0-RC1")
        classpath('org.jacoco:org.jacoco.core:0.8.8')
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.20'

    }
}
allprojects {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven {
            url 'https://developer.huawei.com/repo/' }
        flatDir {
            dirs 'libs'
        }
    }
}

apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'
sonarqube {
    properties {
        property "sonar.projectKey", "CleverTap_clevertap-android-sdk"
        property "sonar.organization", "clevertap"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

task copyTemplates {
    def props = new Properties()
    file("versions.properties").withInputStream { props.load(it) }
    outputs.upToDateWhen { false }
    props.put("clevertap_android_sdk",Libs.clevertap_android_sdk.dropRight(1))
    props.put("clevertap_rendermax_sdk", Libs.clevertap_rendermax_sdk.dropRight(1))
    props.put("clevertap_geofence_sdk",Libs.clevertap_geofence_sdk.dropRight(1))
    props.put("clevertap_hms_sdk",Libs.clevertap_hms_sdk.dropRight(1))
    props.put("clevertap_xiaomi_sdk",Libs.clevertap_xiaomi_sdk.dropRight(1))
    props.put("push_templates",Libs.clevertap_push_templates_sdk.dropRight(1))
    props.put("play_services_location",Libs.play_services_location.dropRight(1))
    props.put("work_runtime",Libs.work_runtime.dropRight(1))
    props.put("concurrent_futures",Libs.concurrent_futures.dropRight(1))
    props.put("push",Libs.push.dropRight(1))
    props.put("appcompat",Libs.appcompat.dropRight(1))
    props.put("viewpager",Libs.viewpager.dropRight(1))
    props.put("material",Libs.material.dropRight(1))
    props.put("glide",Libs.glide.dropRight(1))
    props.put("recyclerview",Libs.recyclerview.dropRight(1))
    props.put("exoplayer",Libs.exoplayer.dropRight(1))
    props.put("exoplayer_ui",Libs.exoplayer_ui.dropRight(1))
    props.put("exoplayer_hls",Libs.exoplayer_hls.dropRight(1))
    props.put("installreferrer",Libs.installreferrer.dropRight(1))
    props.put("firebase_messaging",Libs.firebase_messaging.dropRight(1))
    props.put("androidx_core_core",Libs.androidx_core_core.dropRight(1))
    props.put("agcp",Libs.agcp.dropRight(1))
    props.put("com_android_tools_build_gradle",Libs.com_android_tools_build_gradle.dropRight(1))
    props.put("google_services",Libs.google_services.dropRight(1))
    props.put("play_services_ads",Libs.play_services_ads.dropRight(1))

    doLast{
        copy {
            from 'templates/README.md'
            into "."
            expand('ext': props.asImmutable())
        }
        copy {
            from 'templates'
            exclude "README.md"
            into "docs/"
            expand('ext': props.asImmutable())
        }
    }
}
